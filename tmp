实现了修改数据，停留在当前页 namespace.vue

深浅拷贝：siteMManage  编辑中
table 多选  pv实现了
        1、通过给 columns 数据设置一项，指定 type: 'selection'，即可自动开启多选功能。
        2、 <i-table border stripe ref="namespace_table" @on-selection-change="onSelect" :columns="format" :data="show_list">
        3、 
        // 选项改变就会触发
        // onSelect(selection){
        //     this.selecteds = selection;
        //     console.log(this.selecteds)
        // },

删除 role
import { delete_namespace_resource } from '@/common/util.js'

            let name = this.show_list[index].name
            let result = confirm("确定要删除"+name+"吗?")
            if(result == false) return 
            let namespace = this.show_list[index].namespace
            delete_namespace_resource(namespace,name,delete_role)
            this.refresh()

Form 表单验证 deployment.vue 提交添加亲和
table td加链接： configMap
json显示

                    render: (h, params) => {
                        return h('div', [
                            h('pre', JSON.stringify(params.row.node_info,undefined,4))
                        ]);
                    }

删除：
        del_XX(index){
            // console.log(index)
            let name = this.show_list[index].name
            let result = confirm("确定要删除"+name+"服务吗?")
            if(result == false) return 
            let cluster = localStorage.getItem('currentCluster')
            let namespace = localStorage.getItem('currentNameSpace')
            let headers = {"cluster_name": cluster }
            if (namespace =='' || namespace == 'all'){
                alert("去选择具体的namespace")
                return
            }
            let data = JSON.stringify({"namespace":namespace,"name":name})
            let url = 'http://flask-gateway:8000' + "/k8s"+"/delete_XX" 
            let method='post'
            if(cluster){
                axios({
                    url:url,headers: headers,data:data,method:method
                }).then( (response) => {
                    let info = JSON.stringify(response.data)
                    if(info.indexOf('ok') != -1) {
                        this.$Message.success('删除ingress成功')
                        this.refresh()
                    }else {
                        alert(info)
                    }
                }).catch(function (error){
                    console.log(error)
                })
            }
        },
    
pre：换行
    pre{
        white-space: pre-wrap!important;
        word-wrap: break-word!important;
        *white-space:normal!important;
    }